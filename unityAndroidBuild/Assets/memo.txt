unity에서 adroid Build

다음의 세 가지가 필요하다

JDK Java Development Kit

	안드로이드 앱 개발에는 Java언어가 기본으로 사용되고 있다.
	그래서 자바 언어로 기술된 기본기능모음 개발 도구모음이 필요하다

AndroidSDK: Android Software Development Kit

	안드로이드 앱 개발이므로
	안드로이드 운영체제에서 제공하는 System Call( API ) (운영체제 기능 함수 모음집)
	을 다룰 수 있는 개발 도구 모음이다.

NDK: Native Development Kit

	Android앱은 기본적으로 VM(Virtual Machine)을 거쳐 동작한다.
	즉 실행중에 VM을 통해 CPU에서 실행되는 기계어로 바뀌기 때문에 필연적으로 느리다
	이에 개발자들의 요구에 따라
	C/C++로 만들어진
	'System Call( API ) (운영체제 기능 함수 모음집)을 다룰 수 있는 개발 도구 모음'으로서 만들어졌다.
	이를 이용하여 빌드하면
	Native한 결과물을 얻는다.
	( CPU에서 직접 해석하여 동작하므로 빠르다 )


예전에는 일일이 수동으로 다 설치, 설정하여야 했지만
2020년 즈음부터는 유니티에 한해 정리가 모두 되어 유니티의 구성요소로 포함되었다.





텍스처 압축

디스크를 차지하는 용량을 줄이기 위한 기법으로서의 이미지 압축 알고리즘
jpg, gif, ...
--->메모리로 올라오면 압축이 풀린 원본 비트맵 데이터가 만들어진다

메모리 상에서 용량을 줄이기 위한 기법으로서의 이미지 압축 알고리즘
<-- 실시간으로 압축을 푸는 알고리즘이 적용되어 있다.
	directX에서 만들어진 DXT( dds파일 ):pc용
	ETC: 안드로이드 표준 압축 알고리즘 포맷




ETC Erisson Texture Compression
---'Android 기기면 모두 지원한다'---
색차(채도)와 휘도(명도) 정보를 분리하여 저장하는 기법이다.
<--사람의 눈이 휘도에 더 민감하므로 휘도 정보를 좀더 비중있게 저장하고
색차 정보는 줄여서 압축한다.


PVRTC PowerVR Texture Compression
---iOS용 텍스처 압축 알고리즘 ---


ASTC
Adaptive Scalable Texture Compression
용량과 품질에 관한 트레이드 오프가 가능한 손실 블록 기반 텍스쳐 알고리즘
---Android와 iOS를 모두 지원한다---



패키지 네임 package name : 안드로이드 운영체제에서 임의의 앱의 식별자

com.회사이름.프로젝트명 <--관습적으로 이렇게 짓는다.
(<--영어로 하세요)


Mono
: 마이크로소프트사의 닷넷프레임워크의 오픈소스 버전
<-- 즉, 닷넷프레임워크에 맞춰 작성한 프로그램을 동작시켜줄 수 있는 오픈소스 버전의 개발환경(런타임포함)

IL2CPP
: Intermediate Language to cpp


CLR Common Language Runtime
	JIT Compier: Just In Time Compiler: 실행중에 IL을 해석하여 native를 만들어내는 컴파일러

C#으로 만든 응용프로그램은 실행중에 CLR에 의해 해석되므로 필연적으로 네이티브에 비해 느리다

	C#컴파일러			실행중 CLR
C# --------------> IL --------------


IL2CPP옵션에서는 IL2CPP컴파일러를 이용하여 제작중에 네이티브 코드를 만든다( NDK가 필요하다 )
그러므로 매우 빠른 결과물이 만들어진다.


C#컴파일러			IL2CPP컴파일러				'실행'
C# --------------> IL --------------> Native	on cpu


APK: 안드로이드 플랫폼에서 동작하는 앱의 압축파일 포맷



실제 타겟 디바이스 target device에서 디버깅(프로파일링, 드로우콜 확인)을 해보려면
usb로 연결하여 실행한다
빌드는 Development Build옵션으로 빌드하고
타겟 디바이스에는 usb디버깅 옵션이 반드시 켜있어야 한다.

<--동일한 와이파이 내에 있는 개발용 컴퓨터와 타겟 디바이스로도 무선으로도 가능하다.